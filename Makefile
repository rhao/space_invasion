#############################################################################
# Makefile for building: game_rhao
# Generated by qmake (2.01a) (Qt 4.8.1) on: Sun Apr 28 17:39:54 2013
# Project:  game_rhao.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile game_rhao.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = alien.cpp \
		background.cpp \
		coin.cpp \
		doctor.cpp \
		endScreen.cpp \
		explosion.cpp \
		game.cpp \
		mainwindow.cpp \
		moneybag.cpp \
		player.cpp \
		plusPopup.cpp \
		thing.cpp \
		title.cpp \
		turtle.cpp moc_mainwindow.cpp
OBJECTS       = alien.o \
		background.o \
		coin.o \
		doctor.o \
		endScreen.o \
		explosion.o \
		game.o \
		mainwindow.o \
		moneybag.o \
		player.o \
		plusPopup.o \
		thing.o \
		title.o \
		turtle.o \
		moc_mainwindow.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		game_rhao.pro
QMAKE_TARGET  = game_rhao
DESTDIR       = 
TARGET        = game_rhao

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: game_rhao.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtGui.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile game_rhao.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtGui.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile game_rhao.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/game_rhao1.0.0 || $(MKDIR) .tmp/game_rhao1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/game_rhao1.0.0/ && $(COPY_FILE) --parents alien.h background.h coin.h doctor.h endScreen.h explosion.h mainwindow.h moneybag.h player.h plusPopup.h thing.h title.h turtle.h .tmp/game_rhao1.0.0/ && $(COPY_FILE) --parents alien.cpp background.cpp coin.cpp doctor.cpp endScreen.cpp explosion.cpp game.cpp mainwindow.cpp moneybag.cpp player.cpp plusPopup.cpp thing.cpp title.cpp turtle.cpp .tmp/game_rhao1.0.0/ && (cd `dirname .tmp/game_rhao1.0.0` && $(TAR) game_rhao1.0.0.tar game_rhao1.0.0 && $(COMPRESS) game_rhao1.0.0.tar) && $(MOVE) `dirname .tmp/game_rhao1.0.0`/game_rhao1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/game_rhao1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp
moc_mainwindow.cpp: coin.h \
		thing.h \
		player.h \
		background.h \
		alien.h \
		doctor.h \
		moneybag.h \
		turtle.h \
		plusPopup.h \
		explosion.h \
		title.h \
		endScreen.h \
		mainwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

alien.o: alien.cpp alien.h \
		thing.h \
		mainwindow.h \
		coin.h \
		player.h \
		background.h \
		doctor.h \
		moneybag.h \
		turtle.h \
		plusPopup.h \
		explosion.h \
		title.h \
		endScreen.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o alien.o alien.cpp

background.o: background.cpp background.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o background.o background.cpp

coin.o: coin.cpp coin.h \
		thing.h \
		mainwindow.h \
		player.h \
		background.h \
		alien.h \
		doctor.h \
		moneybag.h \
		turtle.h \
		plusPopup.h \
		explosion.h \
		title.h \
		endScreen.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o coin.o coin.cpp

doctor.o: doctor.cpp doctor.h \
		thing.h \
		mainwindow.h \
		coin.h \
		player.h \
		background.h \
		alien.h \
		moneybag.h \
		turtle.h \
		plusPopup.h \
		explosion.h \
		title.h \
		endScreen.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o doctor.o doctor.cpp

endScreen.o: endScreen.cpp endScreen.h \
		mainwindow.h \
		coin.h \
		thing.h \
		player.h \
		background.h \
		alien.h \
		doctor.h \
		moneybag.h \
		turtle.h \
		plusPopup.h \
		explosion.h \
		title.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o endScreen.o endScreen.cpp

explosion.o: explosion.cpp explosion.h \
		mainwindow.h \
		coin.h \
		thing.h \
		player.h \
		background.h \
		alien.h \
		doctor.h \
		moneybag.h \
		turtle.h \
		plusPopup.h \
		title.h \
		endScreen.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o explosion.o explosion.cpp

game.o: game.cpp mainwindow.h \
		coin.h \
		thing.h \
		player.h \
		background.h \
		alien.h \
		doctor.h \
		moneybag.h \
		turtle.h \
		plusPopup.h \
		explosion.h \
		title.h \
		endScreen.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o game.o game.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		coin.h \
		thing.h \
		player.h \
		background.h \
		alien.h \
		doctor.h \
		moneybag.h \
		turtle.h \
		plusPopup.h \
		explosion.h \
		title.h \
		endScreen.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

moneybag.o: moneybag.cpp moneybag.h \
		thing.h \
		mainwindow.h \
		coin.h \
		player.h \
		background.h \
		alien.h \
		doctor.h \
		turtle.h \
		plusPopup.h \
		explosion.h \
		title.h \
		endScreen.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moneybag.o moneybag.cpp

player.o: player.cpp player.h \
		mainwindow.h \
		coin.h \
		thing.h \
		background.h \
		alien.h \
		doctor.h \
		moneybag.h \
		turtle.h \
		plusPopup.h \
		explosion.h \
		title.h \
		endScreen.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o player.o player.cpp

plusPopup.o: plusPopup.cpp plusPopup.h \
		mainwindow.h \
		coin.h \
		thing.h \
		player.h \
		background.h \
		alien.h \
		doctor.h \
		moneybag.h \
		turtle.h \
		explosion.h \
		title.h \
		endScreen.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o plusPopup.o plusPopup.cpp

thing.o: thing.cpp mainwindow.h \
		coin.h \
		thing.h \
		player.h \
		background.h \
		alien.h \
		doctor.h \
		moneybag.h \
		turtle.h \
		plusPopup.h \
		explosion.h \
		title.h \
		endScreen.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o thing.o thing.cpp

title.o: title.cpp title.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o title.o title.cpp

turtle.o: turtle.cpp turtle.h \
		thing.h \
		mainwindow.h \
		coin.h \
		player.h \
		background.h \
		alien.h \
		doctor.h \
		moneybag.h \
		plusPopup.h \
		explosion.h \
		title.h \
		endScreen.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o turtle.o turtle.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

